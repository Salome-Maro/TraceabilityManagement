{
  "name": "Capra ",
  "tagline": "A Traceability Management Tool",
  "body": "Capra is a configurable and extendable traceability management tool. It is created in the context of an ITEA funded project called AMALTHEA4Public whose main aim is to develop a platform that will improve the development of embedded multicore and many core systems. \r\n\r\n### How it works\r\nCapra uses the Eclipse Modelling Framework (EMF) as its base technology and stores the traceability model as an EMF model. The traceability metamodel is not fixed and can be defined by the user. It relies on the Eclipse Extension mechanism and provides an extension point for artifacts types to be supported. To add a new type of artifact, one simply needs to add an extension to this extension point and implement the provided interfaces. \r\n\r\n![Capra Architecture](https://github.com/Salome-Maro/TraceabilityManagement/blob/master/CapraArchitecture.png)\r\n\r\n### Authors and Contributors\r\nCurrently, there are three contributors to the project which are Salome Maro(@Salome-Maro), a PhD student at Chalmers|Gothenburg University in Sweden, Anthony Anjorin (@anthonyanjorin), a junior professor at University of Paderborn in Germany, and Hans-Erik Floryd (@Hans-Erik), a project leader at rt-labs (http://www.rt-labs.com) in Sweden.  \r\n\r\n### Support or Contact\r\nIf you are interested in contributing or extending the tool feel free to contact us on the following email: salomem@chalmers.se",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}